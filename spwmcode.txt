`timescale 1ns / 1ps
module sine(input wire clk,output reg  pwm,output reg [7:0] triang,output reg [7:0] sin);
function automatic real factorial (input integer a);
    begin
      if (a > 1) begin
        factorial = a * factorial(a - 1);
      end
      else begin
        factorial = 1;
      end
    end
  endfunction 
  real triangle=0;
  real out2=0;
  real n=0;
  real k=0;
  real p=0;
  reg e=0;
  reg updown=1;
  reg clk_out=0;
  reg [15:0] counter=0;
  always@(posedge clk)
  begin
  if(counter==16'd10)
  begin
  counter<=16'd0;
  clk_out <= ~clk_out;
  end
  else
  begin
  counter<=counter+1;
  end
  end
  
  always@(posedge clk_out)
	  
	begin
		k=(3.14*n)/180;
		p= (k) - ((k**3) /factorial(3)) +((k**5) /factorial(5))-((k**7) /factorial(7))+((k**9) /factorial(9))-((k**11) /factorial(11));
	   if(e==0)
           begin
               p=100+100*p;
            end
       else if(e==1)
            begin
               p= 100-100*p;
            end
	   if (n==180)
		begin
		n=0; 
		e=~e;
		end
		out2=p;
		sin=out2;
		n=n+0.5;

  end
    always@(posedge clk)
    begin
        if (updown == 1'b1) begin
           if (triangle == 8'hcb) begin
              updown <= 0;
              triangle <= triangle - 1;
           end else begin
              triangle <= triangle + 1;
           end
  end 
  else begin
           if (triangle == 8'h00) begin
              updown <= 1;
              triangle <= triangle + 1;
           end else begin
              triangle <= triangle - 1;
           end
     end 
   triang=triangle;  
if(triangle < out2)
begin
  pwm=1;
end
else begin
pwm=0;
end
end
endmodule

